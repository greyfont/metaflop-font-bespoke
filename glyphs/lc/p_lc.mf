%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                         %
% Bespoke v1.7                                                            %
% a Metaflop-font © 2012 by Simon Egli, Marco Müller                      %
% thanks to Teofilo Furtado                                               %
% www.metaflop.com                                                        %
%                                                                         %
% This program is free software: you can redistribute it and/or modify    %
% it under the terms of the GNU General Public License as published by    %
% the Free Software Foundation, either version 3 of the License, or       %
% (at your option) any later version.                                     %
%                                                                         %
% This program is distributed in the hope that it will be useful,         %
% but WITHOUT ANY WARRANTY; without even the implied warranty of          % 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            % 
% GNU General Public License for more details.                            %
%                                                                         %
% You should have received a copy of the GNU General Public License       %
% along with this program. If not, see <http://www.gnu.org/licenses/>.    %
%                                                                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% box dimension definition %
beginadjchar("p",4.4,mean#,des#);

% sidebearings %
if (sidebearing=1):
numeric l,r;
normal_adjust_fit(space+0.4u#,space+0.2u#); fi

% overshoot %
top y3=mean+o;
top y4=mean+o;
y3r=y4r=mean-px+o;
bot y7=0-o;
bot y8=0-o;
y7r=y8r=px-o;

% construction %
x1=x2=x9=x10=leftstemloc;
x1r=x2r=x9r=x10r=x1+(cont*px/2);
x5=x6=w-x1;
x5r=x6r=x6-(cont*px/2);
x4r=x7r=x1r+0.5*(x6r-x1r)+0.5*incx*(x6r-x1r);
x3r=x8r=x1r+0.5*(x6r-x1r)-0.5*incx*(x6r-x1r);
y1r=y6r=y8r+0.5*(y3r-y8r)-0.5*incy*(y3r-y8r);
y2r=y5r=y8r+0.5*(y3r-y8r)+0.5*incy*(y3r-y8r);
y9=-d;
y10=mean;
ang:=angle(z6r-z7r);

% penpositions %
penpos1(whatever,if (superness=.5): -(ang-90)/2 else: 0 fi);
penpos2(whatever,if (superness=.5): (ang-90)/2 else: 0 fi);
penpos3(whatever,if (superness=.5): -(180-ang)/2 else: 90 fi);
penpos4(whatever,if (superness=.5): (180-ang)/2 else: 90 fi);
penpos5(whatever,if (superness=.5): -(ang-90)/2 else: 180 fi);
penpos6(whatever,if (superness=.5): (ang-90)/2 else: 180 fi);
penpos7(whatever,if (superness=.5): -(180-ang)/2 else: -90 fi);
penpos8(whatever,if (superness=.5): (180-ang)/2 else: -90 fi);
penpos9(whatever,0);
penpos10(whatever,0);

% draw %
penstroke super_qr(4e,5e)---super_ql(6e,7e)---super_qr(8e,1e)---super_ql(2e,3e)---cycle;
penstroke z9e---z10e;

% penlabels(range 1 thru 150);

endchar;