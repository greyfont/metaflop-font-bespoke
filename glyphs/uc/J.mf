%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                         %
% Bespoke v1.7                                                            %
% a Metaflop-font © 2012 by Simon Egli, Marco Müller                      %
% thanks to Teofilo Furtado                                               %
% www.metaflop.com                                                        %
%                                                                         %
% This program is free software: you can redistribute it and/or modify    %
% it under the terms of the GNU General Public License as published by    %
% the Free Software Foundation, either version 3 of the License, or       %
% (at your option) any later version.                                     %
%                                                                         %
% This program is distributed in the hope that it will be useful,         %
% but WITHOUT ANY WARRANTY; without even the implied warranty of          % 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            % 
% GNU General Public License for more details.                            %
%                                                                         %
% You should have received a copy of the GNU General Public License       %
% along with this program. If not, see <http://www.gnu.org/licenses/>.    %
%                                                                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% box dimension definition %
beginadjchar("J",4.5,cap#,0);

% sidebearings %
if (sidebearing=1):
numeric l,r;
normal_adjust_fit(space-0.3u#,space+0.45u#);
fi

% overshoot %
bot y7=0-o;
bot y8=0-o;
y7r=y8r=px-o;

% construction %
x1=x2=leftstemloc;
x1r=x2r=x1+(cont*px/2);
x5=x6=w-x1;
x5r=x6r=x6-(cont*px/2);
x4r=x7r=x1r+0.5*(x6r-x1r)+0.5*incx*(x6r-x1r);
x3r=x8r=x1r+0.5*(x6r-x1r)-0.5*incx*(x6r-x1r);
y5=y2=h;
y1r=y6r=(0.5*h)-(0.5*incy*h)-px;;
ang:=angle(z6r-z7r);

% penpositions %
penpos1(whatever,0 );
penpos2(whatever,0);
penpos5(whatever,180);
penpos6(whatever,180);
penpos7(whatever,90);
penpos8(whatever,90);

% draw %
penstroke z5e---super_ql(6e,7e);

z100=((-infinity,0.5h-appert*0.5h)--(infinity,0.5h-appert*0.5h)) intersectionpoint (super_qr(8l,1l)---z2l);
path x; numeric t,u; (t,u)=((-infinity,0.5h-appert*0.5h)--(infinity,0.5h-appert*0.5h)) intersectiontimes (super_qr(8l,1l)---z2l);
z101=z100+whatever*(dir(angle(direction u of (super_qr(8l,1l)---z2l))+90));
x101=w;
path r; numeric t,u; (t,u)=((z100--z101) intersectiontimes (super_qr(8r,1r)---z2r));
r = subpath (u,0) of (super_qr(8r,1r)---z2r);
path ss; numeric t,u; (t,u)=((0,0.5h-appert*0.5h)--(infinity,0.5h-appert*0.5h)) intersectiontimes (super_qr(8l,1l)---z2l);
ss = subpath (0,u) of (super_qr(8l,1l)---z2l);
fill ss---r---z7r---z7l---cycle;

%penlabels(range 1 thru 150);

endchar;
