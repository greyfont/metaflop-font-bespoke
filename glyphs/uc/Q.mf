%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%                                                                         %%%
%%% Bespoke v1.6 – a Metaflop-Font                                          %%%
%%% © 2012 by Simon Egli, Marco Müller, Teofilo Furtado                     %%%
%%% www.metaflop.com                                                        %%%
%%%                                                                         %%%
%%% This program is free software: you can redistribute it and/or modify    %%%
%%% it under the terms of the GNU General Public License as published by    %%%
%%% the Free Software Foundation, either version 3 of the License, or       %%%
%%% (at your option) any later version.                                     %%%
%%%                                                                         %%%
%%% This program is distributed in the hope that it will be useful,         %%%
%%% but WITHOUT ANY WARRANTY; without even the implied warranty of          %%% 
%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            %%% 
%%% GNU General Public License for more details.                            %%%
%%%                                                                         %%%
%%% You should have received a copy of the GNU General Public License       %%%
%%% along with this program. If not, see <http://www.gnu.org/licenses/>.    %%%
%%%                                                                         %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% box dimension definition %%%
beginadjchar("Q",6,cap#,0);


%%% sidebearings %%%

if (sidebearing=1):

numeric l,r;
normal_adjust_fit(space*0.7u#,space*0.7u#);

fi

%%% overshoot %%%
y4r=y3r=h-px +o; % overshoot up
y8r=y7r=px -o; % overshoot down
top y3=h +o; % overshoot up
top y4=h +o; % overshoot up
bot y8=0 -o; % overshoot down
bot y7=0 -o; % overshoot down

%%% construction %%%
x8r=if (incx>.5): .5w else: x1r+incx*(x6r-x1r) fi;
x7r=if (incx>.5): .5w else: x6r-incx*(x6r-x1r) fi;
y1r=if (incy>.5): .5h else: y8r-incy*(y8r-y3r) fi;
y2r=if (incy>.5): .5h else: y3r+incy*(y8r-y3r) fi;
x8r=x3r; x7r=x4r;
x1=leftstemloc;
x6=w-x1;
x6=x5;
y2r=y5r;
y6r=y1r;
x2=x1;
x1r=x2r=x1+(cont*px/2);
x6r=x5r=x6-(cont*px/2);
z10-z9=z1-z8;
(z9+z10)/2=(z7+z6)/2;
ang:=angle(z6r-z7r);

%%% penpositions %%%
penpos1(whatever,if (superness=.5): -(ang-90)/2 else: 0 fi);
penpos2(whatever,if (superness=.5): ((ang-90)/2) else: 0 fi);
penpos3(whatever,if (superness=.5): -(180-ang)/2 else: -90 fi);
penpos4(whatever,if (superness=.5): (180-ang)/2 else: -90 fi);
penpos5(whatever,if (superness=.5): -(ang-90)/2 else: 180 fi);
penpos6(whatever,if (superness=.5): (ang-90)/2 else: 180 fi);
penpos7(whatever,if (superness=.5): -(180-ang)/2 else: 90 fi);
penpos8(whatever,if (superness=.5): (180-ang)/2 else: 90 fi);
penpos9(px,angle(z9-z10)+90);
penpos10(px,angle(z9-z10)+90);

%%% draw %%%
penstroke z9e--z10e;
penstroke super_qr(4e,5e)---super_ql(6e,7e)---super_qr(8e,1e)---super_ql(2e,3e)---cycle;

% penlabels(1,2,3,4,5,6,7,8);

endchar;
