%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Travellion v1.6 – a MetaFlop-Font                       %%%
%%% © 2012 by Simon Egli, Marco Müller, Teofilo Furtado     %%%
%%% www.metaflop.com                                        %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% box dimension definition %%%
beginadjchar("G",corr*6,cap#,0);

%%% sidebearings %%%
numeric l,r;
normal_adjust_fit(0.7u#,0.9u#);

%%% overshoot %%%
y4r=y3r=h-px +o; % overshoot up
y8r=y7r=px -o; % overshoot down
top y3=h +o; % overshoot up
top y4=h +o; % overshoot up
bot y8=0 -o; % overshoot down
bot y7=0 -o; % overshoot down

%%% construction %%%
x8r=if (incx>.5): (leftstemloc-.5(cont*px))+incx*((w-(leftstemloc-.5(cont*px)))-(leftstemloc-.5(cont*px))) else: x1r+incx*((w-x1r)-x1r) fi;
x7r=if (incx>.5): x8r else: (w-x1r)-incx*((w-x1r)-x1r) fi;
y1r=if (incy>.5): .5h else: y8r-incy*(y8r-y3r) fi;
y2r=if (incy>.5): .5h else: y3r+incy*(y8r-y3r) fi;
x8r=x3r; x7r=x4r;
x1=leftstemloc;
x6l=if (incx>.5): x8r+(x8r-x2l) else: w-leftstemloc+.5(cont*px) fi;
x6l=x5l;
y2l=y5l;
y6l=y1l;
x2=x1;
x1r=x2r=x1+(cont*px/2);
x6=x5=x6r+(px/2);
x10=x11=x9=w-x1;
x10r=x9r=x10+.5(px*cont);
x12=.6w;
y12=y11=y12r-px/2;
y10=y11r=y12r=bar*h;
y9=0;
ang:=angle(z3r-z2r);

%%% penpositions %%%
penpos1(whatever,if (superness=.5): -(ang-90)/2 else: 0 fi);
penpos2(whatever,if (superness=.5): ((ang-90)/2) else: 0 fi);
penpos3(whatever,if (superness=.5): -(180-ang)/2 else: -90 fi);
penpos4(whatever,if (superness=.5): (180-ang)/2 else: -90 fi);
penpos5(whatever,if (superness=.5): -(ang-90)/2 else: 180 fi);
penpos6(whatever,if (superness=.5): (ang-90)/2 else: 180 fi);
penpos7(whatever,if (superness=.5): -(180-ang)/2 else: 90 fi);
penpos8(whatever,if (superness=.5): (180-ang)/2 else: 90 fi);
penpos9(whatever,0);
penpos10(whatever,0);
penpos11(whatever,90);
penpos12(whatever,90);

%%% draw %%%
penstroke z7e---super_qr(8e,1e)---super_ql(2e,3e);
penstroke z11e...z12e;

if (incx > .5):
	%path steml; steml=z10l...z9l;
	%path stemr; stemr=z10r...z9r;
	%path down; down=super_ql(6l,7l);
	%path stem; numeric r,u; (r,u)=steml intersectiontimes down;
	%stem = subpath (u,infinity) of down;
	%z56=stemr intersectionpoint down;
	%fill z55---z10l---z10r---z56---cycle;
	path al; al = ((w-x1l,-infinity)--(w-x1l,y12r)---z12r);
	path dl; dl = super_ql(6l,7l);
	path dr; dr = super_ql(6r,7r);
	path steml; steml= z10l...z9l;
	path aar; numeric t,u; (t,u)=(al intersectiontimes dr);
	aar = subpath (u,infinity) of dr;
	path aal; numeric r,u; (r,u)=(al intersectiontimes dl);
	aal = subpath (infinity,u) of dl;
	path stem; numeric k,l; (k,l)=(steml intersectiontimes dl);
	stem = subpath (l,u) of dl;
	fill stem---z10r---z10l---cycle;
	fill aal---aar---cycle;
	z99=(((w-x1l,-1)--(w-x1l,h+infinity)) intersectionpoint (z3l---super_qr(4l,5l)));
if (y99>y12r):
	numeric t,u; (t,u)=(((w-x1l,-infinity)--(w-x1l,h+infinity)) intersectiontimes (z3l---super_qr(4l,5l)));
if (x4l>(w-x2l)): 
	x98=x99; else: z98=z99+whatever*(dir(angle(direction u of (z3l---super_qr(4l,5l)))+90));fi
	y98=0;
	path a; numeric t,u; (t,u)=((z99--z98) intersectiontimes (z3r---super_qr(4r,5r)));
	a = subpath (0,u) of (z3r---super_qr(4r,5r));
	path b; numeric t,u; (t,u)=(((w-x1l,-infinity)--(w-x1l,h+infinity)) intersectiontimes (z3l---super_qr(4l,5l)));
	b = subpath (u,0) of (z3l---super_qr(4l,5l));
	fill b---z3l---z3r---a---cycle;
else:
	path g; g = ((0,(y12r+appert*(y3r-y12r)))--(infinity,(y12r+appert*(y3r-y12r))));
	z97=g intersectionpoint (z3l---super_qr(4l,5l)---z6l);
	path x; numeric t,u; (t,u)=((g) intersectiontimes (z3l---super_qr(4l,5l)---z6l));
	z98=z97+whatever*(dir(angle(direction u of (z3l---super_qr(4l,5l)---z6l))+90));
	x98=0;
	path b; numeric t,u; (t,u)=((z97--z98) intersectiontimes (super_qr(4r,5r)---z6r));
	b = subpath (0,u) of (super_qr(4r,5r)---z6r);
	path a; numeric t,u; (t,u)=((g) intersectiontimes (z3l---super_qr(4l,5l)---z6l));
	a = subpath (u,0) of (z3l---super_qr(4l,5l)---z6l);
	fill a---z3l---z3r---b---cycle;fi
else:
	penstroke z10e...z9e;
	path al; al = z9l---z10l---z12r;
	path dl; dl = super_ql(6l,7l);
	path dr; dr = super_ql(6r,7r);
	path aal; numeric r,u; (r,u)=(al intersectiontimes dl);
	aal = subpath (infinity,u) of dl;
	path aar; numeric t,u; (t,u)=(al intersectiontimes dr);
	aar = subpath (u,infinity) of dr;
	fill aal---aar---cycle;
	path g; if(bar<.5): g = ((0,(h/2+appert*(h/2-y7)))--(infinity,(h/2+appert*(h/2-y7)))); 
else: g = ((0,(y12r+appert*(y3r-y12r)))--(infinity,(y12r+appert*(y3r-y12r))));fi
z99=g intersectionpoint (z3l---super_qr(4l,5l)---z6l);
path x; numeric t,u; (t,u)=((g) intersectiontimes (z3l---super_qr(4l,5l)---z6l));
z98=z99+whatever*(dir(angle(direction u of (z3l---super_qr(4l,5l)---z6l))+90));
x98=0;
path b; numeric t,u; (t,u)=((z99--z98) intersectiontimes (super_qr(4r,5r)---z6r));
b = subpath (0,u) of (super_qr(4r,5r)---z6r);
path a; numeric t,u; (t,u)=((g) intersectiontimes (z3l---super_qr(4l,5l)---z6l));
a = subpath (u,0) of (z3l---super_qr(4l,5l)---z6l);
fill a---z3l---z3r---b---cycle;
%penstroke super_ql(6e,7e)---super_qr(8e,1e);
fi

%penlabels(range 1 thru 80);
%labels(range 1 thru 200);

endchar;