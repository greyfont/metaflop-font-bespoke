%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                         %
% Bespoke v1.7                                                            %
% a Metaflop-font © 2012 by Simon Egli, Marco Müller                      %
% thanks to Teofilo Furtado                                               %
% www.metaflop.com                                                        %
%                                                                         %
% This program is free software: you can redistribute it and/or modify    %
% it under the terms of the GNU General Public License as published by    %
% the Free Software Foundation, either version 3 of the License, or       %
% (at your option) any later version.                                     %
%                                                                         %
% This program is distributed in the hope that it will be useful,         %
% but WITHOUT ANY WARRANTY; without even the implied warranty of          % 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            % 
% GNU General Public License for more details.                            %
%                                                                         %
% You should have received a copy of the GNU General Public License       %
% along with this program. If not, see <http://www.gnu.org/licenses/>.    %
%                                                                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% box dimension definition %
beginadjchar("9",4.5,cap#,0);

% sidebearings %
if (sidebearing=1):
numeric l,r;
normal_adjust_fit(space+0.7u#,space+0.7u#);
fi
eight:=0*h;

% overshoot %
bot y8=0-o;
bot y7=0-o;
y8r=y7r=px-o;
top y11=h+o;
top y12=h+o;
y12r=y11r=h-px+o;

% construction %
x1=x2=x9=x10=leftstemloc;
x1r=x2r=x9r=x10r=x1+(cont*px/2);
x5=x6=x13=x14=w-x1;
x5r=x6r=x13r=x14r=x6-(cont*px/2);
x4r=x7r=x12r=x15r=x2r+0.5*(x6r-x2r)+0.5*incx*(x6r-x2r);
x8r=x11r=x3r=x16r=x2r+0.5*(x6r-x2r)-0.5*incx*(x6r-x2r);
y3=y4=y15=y16=(.4h);
y3r=y4r=(.4h)-.5px;
y15r=y16r=(.4h)+.5px;
y1r=y6r=y8r+0.5*(y3r-y8r)-0.5*incy*(y3r-y8r)+px;
y2r=y5r=y8r+0.5*(y3r-y8r)+0.5*incy*(y3r-y8r)+px;
y9r=y14r=y16r+0.5*(y11r-y16r)-0.5*incy*(y11r-y16r);
y10r=y13r=y16r+0.5*(y11r-y16r)+0.5*incy*(y11r-y16r);
ang:=angle(z6r-z7r);

% penpositions %
penpos1(whatever,if (superness=.5): -(ang-90)/2 else: 0 fi);
penpos2(whatever,if (superness=.5): (ang-90)/2 else: 0 fi);
penpos3(whatever,if (superness=.5): -(180-ang)/2 else: 90 fi);
penpos4(whatever,if (superness=.5): (180-ang)/2 else: 90 fi);
penpos5(whatever,if (superness=.5): -(ang-90)/2 else: 180 fi);
penpos6(whatever,if (superness=.5): (ang-90)/2 else: 180 fi);
penpos7(whatever,if (superness=.5): -(180-ang)/2 else: -90 fi);
penpos8(whatever,if (superness=.5): (180-ang)/2 else: -90 fi);
penpos9(whatever,if (superness=.5): -(ang-90)/2 else: 0 fi);
penpos10(whatever,if (superness=.5): (ang-90)/2 else: 0 fi);
penpos11(whatever,if (superness=.5): -(180-ang)/2 else: 90 fi);
penpos12(whatever,if (superness=.5): (180-ang)/2 else: 90 fi);
penpos13(whatever,if (superness=.5): -(ang-90)/2 else: 180 fi);
penpos14(whatever,if (superness=.5): (ang-90)/2 else: 180 fi);
penpos15(whatever,if (superness=.5): -(180-ang)/2 else: -90 fi);
penpos16(whatever,if (superness=.5): (180-ang)/2 else: -90 fi);

% draw %
penstroke super_qr(12e,13e)---super_ql(14e,15e)---super_qr(16e,9e)---super_ql(10e,11e)---cycle;

penstroke z14e---z5e---super_ql(6e,7e)---z8e;
z100=((-infinity,y8r+0.5*(y3r-y8r)-appert*0.5*(y3r-y8r))--(infinity,y8r+0.5*(y3r-y8r)-appert*0.5*(y3r-y8r))) intersectionpoint (super_qr(8l,1l)---z2l);
path x; numeric t,u; (t,u)=((-infinity,y8r+0.5*(y3r-y8r)-appert*0.5*(y3r-y8r))--(infinity,y8r+0.5*(y3r-y8r)-appert*0.5*(y3r-y8r))) intersectiontimes (super_qr(8l,1l)---z2l);
z101=z100+whatever*(dir(angle(direction u of (super_qr(8l,1l)---z2l))+90));
x101=w;
path r; numeric t,u; (t,u)=((z100--z101) intersectiontimes (super_qr(8r,1r)---z2r));
r = subpath (u,0) of (super_qr(8r,1r)---z2r);
path ss; numeric t,u; (t,u)=((0,y8r+0.5*(y3r-y8r)-appert*0.5*(y3r-y8r))--(infinity,y8r+0.5*(y3r-y8r)-appert*0.5*(y3r-y8r))) intersectiontimes (super_qr(8l,1l)---z2l);
ss = subpath (0,u) of (super_qr(8l,1l)---z2l);
fill ss---r---z7r---z7l---cycle;

% penlabels(range 1 thru 150);

endchar;
