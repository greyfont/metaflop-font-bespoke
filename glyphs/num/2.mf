%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                         %
% Bespoke v1.7                                                            %
% a Metaflop-font © 2012 by Simon Egli, Marco Müller                      %
% thanks to Teofilo Furtado                                               %
% www.metaflop.com                                                        %
%                                                                         %
% This program is free software: you can redistribute it and/or modify    %
% it under the terms of the GNU General Public License as published by    %
% the Free Software Foundation, either version 3 of the License, or       %
% (at your option) any later version.                                     %
%                                                                         %
% This program is distributed in the hope that it will be useful,         %
% but WITHOUT ANY WARRANTY; without even the implied warranty of          % 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            % 
% GNU General Public License for more details.                            %
%                                                                         %
% You should have received a copy of the GNU General Public License       %
% along with this program. If not, see <http://www.gnu.org/licenses/>.    %
%                                                                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% box dimension definition %
beginadjchar("2",4.5,cap#,0);

% sidebearings %
numeric l,r;
normal_adjust_fit(space+0.7u#,space+0.7u#);

% overshoot %
top y11=h+o;
top y12=h+o;
y12r=y11r=h-px+o;

% construction %
x1=x2=x9=x10=leftstemloc;
x1r=x2r=x9r=x10r=x1+(cont*px/2);
x13=x14=w-x1;
x8=w-x1+.5px;
x13r=x14r=w-x1r;
x4r=x12r=x15r=x2r+0.5*(x14r-x2r)+0.5*incx*(x14r-x2r);
x3r=x11r=x16r=x2r+0.5*(x14r-x2r)-0.5*incx*(x14r-x2r);
x7r=x1l; 
y1=0;
bot y7=0;
bot y8=0;
y2r=y8r+0.5*(y4r-y8r)+0.5*incy*(y4r-y8r)-px;
y7r=y8r=y7+px/2;
y3=y4=y15=y16=(.5h);
y3r=y4r=(.5h)-.5px;
y15r=y16r=(.5h)+.5px;
y10r=y13r=y16r+0.5*(y11r-y16r)+0.5*incy*(y11r-y16r);
y9r=y14r=y16r+0.5*(y12r-y16r)-0.5*incy*(y12r-y16r);
ang:=angle(z14r-z15r);

% penpositions %
penpos1(whatever,0);
penpos2(whatever,0);
penpos3(whatever,90);
penpos4(whatever,90);
penpos7(whatever,90);
penpos8(whatever,90);
penpos9(whatever,180);
penpos10(whatever,180);
penpos11(whatever,-90);
penpos12(whatever,-90);
penpos13(whatever,0);
penpos14(whatever,0);
penpos15(whatever,90);
penpos16(whatever,90);

% draw %
penstroke z8e---z7e;
penstroke z1e---super_ql(2e,3e)---z4e;
penstroke super_qr(15e,14e)---z14e---z13e&super_ql(13e,12e);
z99=((0,y16r+0.5*(y11r-y16r)+appert*0.5*(y11r-y16r))--(infinity,y11r+0.5*(y11r-y16r)+appert*0.5*(y11r-y16r))) intersectionpoint (z12l---super_qr(11l,10l)---z9l);
path x; numeric t,u; (t,u)=((0,y16r+0.5*(y11r-y16r)+appert*0.5*(y11r-y16r))--(infinity,y16r+0.5*(y11r-y16r)+appert*0.5*(y11r-y16r))) intersectiontimes (z12l---super_qr(11l,10l)---z9l);	
z98=z99+whatever*(dir(angle(direction u of (z12l---super_qr(11l,10l)---z9l))+90));
x98=w;
path b; numeric t,u; (t,u)=((z99--z98) intersectiontimes (z12r---super_qr(11r,10r)---z9r));
b = subpath (0,u) of (z12r---super_qr(11r,10r)---z9r);
path a; numeric t,u; (t,u)=(((0,y16r+0.5*(y11r-y16r)+appert*0.5*(y11r-y16r))--(infinity,y16r+0.5*(y11r-y16r)+appert*0.5*(y11r-y16r))) intersectiontimes (z12l---super_qr(11l,10l)---z9l));
a = subpath (u,0) of (z12l---super_qr(11l,10l)---z9l);
fill a---z12l---z12r---b---cycle;

% penlabels(range 1 thru 150);

endchar;
